query ProjectsQuery($limit: Int, $offset: Int) {
    allProjects(limit: $limit, offset: $offset) {
        totalCount
        results {
            title,
            modified,
            description,
            currentCommit,
            id,
            slug,
            packages {
                resultCount,
            }
            members {
                user {
                    firstName,
                    lastName,
                    avatar,
                }
            }
        }
    }
}

query ProjectDetailQuery($slug: String) {
    project(slug: $slug) {
        created,
        modified,
        title,
        description,
        slug,
        id,
        specRepository,
        specRepositoryBranch,
        specType,
        repoDir,
        currentCommit,
        accessUsername,
        accessToken,
        creator {
            firstName,
            lastName,
        }
        members {
            id,
            user {
                firstName,
                lastName,
                avatar,
                lastLogin,
                email,
            }
            role,
        },
        packages {
            totalCount,
            results {
                modified,
                title,
                description,
                type,
                namespace,
                id,
                environments {
                    deployments {
                        title,
                        id,
                    }
                }
            }
        }

    }
}

query ProjectDetailOtherProjectsQuery {
    allProjects(limit: 1000) {
        results {
            title,
            modified,
            slug,
            id,
            packages {
                totalCount
            }
        }
    }
}

mutation CreateProject(
  $title: String!
  $description: String!
  $specRepository: String!
  $specType: String!
  $accessUsername: String!
  $accessToken: String!
  $specRepositoryBranch: String!
) {
  createUpdateProject(
    input: {
      title: $title
      description: $description
      specRepository: $specRepository
      specType: $specType
      specRepositoryBranch: $specRepositoryBranch
      accessUsername: $accessUsername
      accessToken: $accessToken
    }
  ) {
    project {
      title
    }
    errors {
      messages
      field
    }
  }
}

mutation UpdateProject(
  $title: String!
  $description: String!
  $specRepository: String!
  $specType: String!
  $accessUsername: String!
  $accessToken: String!
  $specRepositoryBranch: String!
  $id: ID
) {
  createUpdateProject(
    input: {
      title: $title
      description: $description
      specRepository: $specRepository
      specType: $specType
      specRepositoryBranch: $specRepositoryBranch
      accessUsername: $accessUsername
      accessToken: $accessToken
      id: $id
    }
  ) {
    project {
      title
    }
    errors {
      messages
      field
    }
  }
}


mutation DeleteProject($id: UUID) {
  deleteProject(id: $id) {
    ok
  }
}